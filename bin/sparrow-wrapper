#!/bin/bash

# Drag in configuration in `sparrow-config.sh` from current
# working directory or parents.
# Alternately, the location of this file can be specified using
# the SPARROW_CONFIG environment variable.

config_file="$SPARROW_CONFIG"

# Search for configuration file if it isn't found.
while [ $(pwd) != "/" ] && [ -z $config_file ]; do
  if [ -f sparrow-config.sh ] ; then
    export config_file="$(readlink -f sparrow-config.sh)"
    break
  fi
  cd ..
done

_cfg="$(tput bold)sparrow-config.sh$(tput sgr0)"
# Bail if we haven't found a configuration file.
if [ -z $config_file ]; then
  echo "Error. No $_cfg found" >&2
  exit 1
fi

# If we haven't yet sourced the config file at a higher-level script
if [ "$sparrow_config_loaded" = false ]; then
  echo "Using $_cfg from $(tput bold)$(pwd)$(tput sgr0)" >&2
  export SPARROW_CONFIG="$config_file"
  source "$config_file"
fi

# Get path to sparrow installation from location of current file
# (even if symlinked)
export SPARROW_PATH="$(dirname "$(dirname "$(readlink -f "$0")")")"
cd "$SPARROW_PATH"

dir="bin"

# Default to help if nothing is provided
subcommand=$1
[ -z $subcommand ] && subcommand='--help'

if [ $subcommand = '--help' ]; then
  # Get help from within sparrow container
  # and append docker wrapper commands
  docker-compose run backend python3 sparrow --help
  echo ""
  echo "Lab-specific commands:"
  ls "$SPARROW_COMMANDS" \
  | grep sparrow- \
  | sed 's/sparrow-/  /g' \
  | grep --invert-match wrapper

  echo ""
  echo "Docker wrapper commands:"
  ls "$dir" \
  | grep sparrow- \
  | sed 's/sparrow-/  /g' \
  | grep --invert-match wrapper
  exit 0
fi

full_command="sparrow-$subcommand"
found_command=0
for f in $(ls "$dir" | grep sparrow-); do
  [ $found_command = 1 ] && break
  # We don't want to return this file...
  [ $f == 'sparrow-wrapper' ] && continue
  [ $f != $full_command ] && continue
  cmd="$dir/$full_command"
  found_command=1
done

for f in $(ls "$SPARROW_COMMANDS" | grep sparrow-); do
  [ $found_command = 1 ] && break
  # We don't want to return this file...
  [ $f != $full_command ] && continue
  cmd="$SPARROW_COMMANDS/$full_command"
  found_command=1
done


if [ $found_command = 0 ]; then
  # Run a command against sparrow within a docker container
  >&2 echo "Running command in container"
  docker-compose run backend sparrow $@
else
  shift
  "$cmd" $@
fi
